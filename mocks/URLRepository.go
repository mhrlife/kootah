// Code generated by mockery v2.8.0. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "kootah/domain"

	mock "github.com/stretchr/testify/mock"
)

// URLRepository is an autogenerated mock type for the URLRepository type
type URLRepository struct {
	mock.Mock
}

// Get provides a mock function with given fields: ctx, uid
func (_m *URLRepository) Get(ctx context.Context, uid domain.UID) (*domain.URL, error) {
	ret := _m.Called(ctx, uid)

	var r0 *domain.URL
	if rf, ok := ret.Get(0).(func(context.Context, domain.UID) *domain.URL); ok {
		r0 = rf(ctx, uid)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.URL)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, domain.UID) error); ok {
		r1 = rf(ctx, uid)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: ctx, url
func (_m *URLRepository) Save(ctx context.Context, url domain.URL) error {
	ret := _m.Called(ctx, url)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, domain.URL) error); ok {
		r0 = rf(ctx, url)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
